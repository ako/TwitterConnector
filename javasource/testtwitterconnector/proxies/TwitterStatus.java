// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package testtwitterconnector.proxies;

public class TwitterStatus
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject twitterStatusMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "TestTwitterConnector.TwitterStatus";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		Status("Status"),
		consumerKey("consumerKey"),
		consumerSecret("consumerSecret"),
		accessToken("accessToken"),
		accessTokenSecret("accessTokenSecret"),
		DirectMessage("DirectMessage"),
		DirectMessageRecipient("DirectMessageRecipient");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public TwitterStatus(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "TestTwitterConnector.TwitterStatus"));
	}

	protected TwitterStatus(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject twitterStatusMendixObject)
	{
		if (twitterStatusMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("TestTwitterConnector.TwitterStatus", twitterStatusMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a TestTwitterConnector.TwitterStatus");

		this.twitterStatusMendixObject = twitterStatusMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'TwitterStatus.load(IContext, IMendixIdentifier)' instead.
	 */
	@Deprecated
	public static testtwitterconnector.proxies.TwitterStatus initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return testtwitterconnector.proxies.TwitterStatus.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.getSudoContext() can be used to obtain sudo access).
	 */
	public static testtwitterconnector.proxies.TwitterStatus initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new testtwitterconnector.proxies.TwitterStatus(context, mendixObject);
	}

	public static testtwitterconnector.proxies.TwitterStatus load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return testtwitterconnector.proxies.TwitterStatus.initialize(context, mendixObject);
	}

	public static java.util.List<testtwitterconnector.proxies.TwitterStatus> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<testtwitterconnector.proxies.TwitterStatus> result = new java.util.ArrayList<testtwitterconnector.proxies.TwitterStatus>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//TestTwitterConnector.TwitterStatus" + xpathConstraint))
			result.add(testtwitterconnector.proxies.TwitterStatus.initialize(context, obj));
		return result;
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of Status
	 */
	public final String getStatus()
	{
		return getStatus(getContext());
	}

	/**
	 * @param context
	 * @return value of Status
	 */
	public final String getStatus(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (String) getMendixObject().getValue(context, MemberNames.Status.toString());
	}

	/**
	 * Set value of Status
	 * @param status
	 */
	public final void setStatus(String status)
	{
		setStatus(getContext(), status);
	}

	/**
	 * Set value of Status
	 * @param context
	 * @param status
	 */
	public final void setStatus(com.mendix.systemwideinterfaces.core.IContext context, String status)
	{
		getMendixObject().setValue(context, MemberNames.Status.toString(), status);
	}

	/**
	 * @return value of consumerKey
	 */
	public final String getconsumerKey()
	{
		return getconsumerKey(getContext());
	}

	/**
	 * @param context
	 * @return value of consumerKey
	 */
	public final String getconsumerKey(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (String) getMendixObject().getValue(context, MemberNames.consumerKey.toString());
	}

	/**
	 * Set value of consumerKey
	 * @param consumerkey
	 */
	public final void setconsumerKey(String consumerkey)
	{
		setconsumerKey(getContext(), consumerkey);
	}

	/**
	 * Set value of consumerKey
	 * @param context
	 * @param consumerkey
	 */
	public final void setconsumerKey(com.mendix.systemwideinterfaces.core.IContext context, String consumerkey)
	{
		getMendixObject().setValue(context, MemberNames.consumerKey.toString(), consumerkey);
	}

	/**
	 * @return value of consumerSecret
	 */
	public final String getconsumerSecret()
	{
		return getconsumerSecret(getContext());
	}

	/**
	 * @param context
	 * @return value of consumerSecret
	 */
	public final String getconsumerSecret(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (String) getMendixObject().getValue(context, MemberNames.consumerSecret.toString());
	}

	/**
	 * Set value of consumerSecret
	 * @param consumersecret
	 */
	public final void setconsumerSecret(String consumersecret)
	{
		setconsumerSecret(getContext(), consumersecret);
	}

	/**
	 * Set value of consumerSecret
	 * @param context
	 * @param consumersecret
	 */
	public final void setconsumerSecret(com.mendix.systemwideinterfaces.core.IContext context, String consumersecret)
	{
		getMendixObject().setValue(context, MemberNames.consumerSecret.toString(), consumersecret);
	}

	/**
	 * @return value of accessToken
	 */
	public final String getaccessToken()
	{
		return getaccessToken(getContext());
	}

	/**
	 * @param context
	 * @return value of accessToken
	 */
	public final String getaccessToken(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (String) getMendixObject().getValue(context, MemberNames.accessToken.toString());
	}

	/**
	 * Set value of accessToken
	 * @param accesstoken
	 */
	public final void setaccessToken(String accesstoken)
	{
		setaccessToken(getContext(), accesstoken);
	}

	/**
	 * Set value of accessToken
	 * @param context
	 * @param accesstoken
	 */
	public final void setaccessToken(com.mendix.systemwideinterfaces.core.IContext context, String accesstoken)
	{
		getMendixObject().setValue(context, MemberNames.accessToken.toString(), accesstoken);
	}

	/**
	 * @return value of accessTokenSecret
	 */
	public final String getaccessTokenSecret()
	{
		return getaccessTokenSecret(getContext());
	}

	/**
	 * @param context
	 * @return value of accessTokenSecret
	 */
	public final String getaccessTokenSecret(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (String) getMendixObject().getValue(context, MemberNames.accessTokenSecret.toString());
	}

	/**
	 * Set value of accessTokenSecret
	 * @param accesstokensecret
	 */
	public final void setaccessTokenSecret(String accesstokensecret)
	{
		setaccessTokenSecret(getContext(), accesstokensecret);
	}

	/**
	 * Set value of accessTokenSecret
	 * @param context
	 * @param accesstokensecret
	 */
	public final void setaccessTokenSecret(com.mendix.systemwideinterfaces.core.IContext context, String accesstokensecret)
	{
		getMendixObject().setValue(context, MemberNames.accessTokenSecret.toString(), accesstokensecret);
	}

	/**
	 * @return value of DirectMessage
	 */
	public final String getDirectMessage()
	{
		return getDirectMessage(getContext());
	}

	/**
	 * @param context
	 * @return value of DirectMessage
	 */
	public final String getDirectMessage(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (String) getMendixObject().getValue(context, MemberNames.DirectMessage.toString());
	}

	/**
	 * Set value of DirectMessage
	 * @param directmessage
	 */
	public final void setDirectMessage(String directmessage)
	{
		setDirectMessage(getContext(), directmessage);
	}

	/**
	 * Set value of DirectMessage
	 * @param context
	 * @param directmessage
	 */
	public final void setDirectMessage(com.mendix.systemwideinterfaces.core.IContext context, String directmessage)
	{
		getMendixObject().setValue(context, MemberNames.DirectMessage.toString(), directmessage);
	}

	/**
	 * @return value of DirectMessageRecipient
	 */
	public final String getDirectMessageRecipient()
	{
		return getDirectMessageRecipient(getContext());
	}

	/**
	 * @param context
	 * @return value of DirectMessageRecipient
	 */
	public final String getDirectMessageRecipient(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (String) getMendixObject().getValue(context, MemberNames.DirectMessageRecipient.toString());
	}

	/**
	 * Set value of DirectMessageRecipient
	 * @param directmessagerecipient
	 */
	public final void setDirectMessageRecipient(String directmessagerecipient)
	{
		setDirectMessageRecipient(getContext(), directmessagerecipient);
	}

	/**
	 * Set value of DirectMessageRecipient
	 * @param context
	 * @param directmessagerecipient
	 */
	public final void setDirectMessageRecipient(com.mendix.systemwideinterfaces.core.IContext context, String directmessagerecipient)
	{
		getMendixObject().setValue(context, MemberNames.DirectMessageRecipient.toString(), directmessagerecipient);
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return twitterStatusMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final testtwitterconnector.proxies.TwitterStatus that = (testtwitterconnector.proxies.TwitterStatus) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "TestTwitterConnector.TwitterStatus";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
